<?php
class User {

    public $firstName = '';
    public $lastName = '';
    public $admin = 0;
 
    public function __construct($fn,$ln,$admin) {
        $this->firstName = $fn;
        $this->lastName = $ln;
        $this->admin = $admin;
    }
    
    public static function login($u, $p)
    {   
        $user = null;
        
        $db = DbConnection::connect();
        //define query
       $query = "SELECT user_first_name, user_last_name,user_admin FROM user where user_name=:un and user_password=:pd";

//create a prepared SQL statement in the database and get a PDOStatement object
        $ps = $db->prepare($query);

 //bind the variables values to the placeholders in the SQL statement
        $ps->bindValue(':un', $u);
        $ps->bindValue(':pd', $p);
        

// execute the SQL                
         $ps->execute();
                
         $rows = $ps->rowCount();
         
         // true if the user is in the database
         if($rows == 1)
               {
               $rowData = $ps->fetch(); 
               $fn = $rowData['user_first_name'];
               $ln = $rowData['user_last_name'];
               $ad = $rowData['user_admin'];
               $user = new User($fn,$ln,$ad);               
               }

//destroy the PDO object      
        $db = null;
        return $user;
    }
    
    public static function register($username, $password, $firstname, $lastname, $email)
    {
  $db = DbConnection::connect();//define query
  
 $query = "INSERT INTO user (
user_name ,user_password ,user_first_name ,user_last_name,user_email
) VALUES (:un, :pd,:fn, :ln,:em);";

//create a prepared SQL statement in the database and get a PDOStatement object
                $ps = $db->prepare($query);

 //bind the variables values to the placeholders in the SQL statement
                $ps->bindValue(':un', $username);
                $ps->bindValue(':pd', $password);
                $ps->bindValue(':fn', $firstname);
                $ps->bindValue(':ln', $lastname);
                $ps->bindValue(':em', $email);
                
// execute the SQL                
                $ps->execute();
            
                $rows = $ps->rowCount();
               
                $user = null;
               
               if($rows == 1)
               {
               $user = new User($firstname,$lastname);
               }
               else
               {
                 echo "<div style='color:brown'>unable to register you at this time</div>";
               }
//destroy the PDO object
                $db = null;
                
                return $user;
    }
    
    public static function userCount()
    {
        // get connection to the database
        $db = DbConnection::connect();
        
        // give a prepared statement to the database
        $ps = $db->prepare("select count(*) from user");
        
        // execute the prepared statement
        $ps->execute();
        
        // read the data generated by the SQL statement
        $data = $ps->fetch();
        
        // read the field count(*) within the SQL 
        $recordCount = $data["count(*)"];
        
        return $recordCount;
    }

 public static function userEmail($username)
    {
        // get connection to the database
        $db = DbConnection::connect();
        
        // give a prepared statement to the database
        $ps = $db->prepare("select user_email from user where user_name=:un");
        
        $ps->bindValue(":un",$username);
        
        // execute the prepared statement
        $ps->execute();
        
        // read the data generated by the SQL statement
        $data = $ps->fetch();
        
        // read the field count(*) within the SQL 
        $email = $data["user_email"];
        
        return $email;
    }
    
   public static function getAllCategories()
   {
        $db = DbConnection::connect();
        
        // give a prepared statement to the database
        $ps = $db->prepare("select * from categories");
        
        // execute the prepared statement
        $ps->execute();
        
        // read the data generated by the SQL statement
        $data = $ps->fetchAll(PDO::FETCH_ASSOC);
     
        return $data;
   }
    
    public static function getProductsByCategory($category)
   {
               $db = DbConnection::connect();
        
        // give a prepared statement to the database
        $ps = $db->prepare("select * from products where category_id=:catid");
        
        $ps->bindValue(':catid',$category);
        // execute the prepared statement
        $ps->execute();
        
        // read the data generated by the SQL statement
        $data = $ps->fetchAll(PDO::FETCH_ASSOC);
     
        return $data; 
   }
   
       public static function getProduct($id)
   {
               $db = DbConnection::connect();
        
        // give a prepared statement to the database
        $ps = $db->prepare("select * from products where product_id=:prodid");
        
        $ps->bindValue(':prodid',$id);
        // execute the prepared statement
        $ps->execute();
        
        // read the data generated by the SQL statement
        $data = $ps->fetch(PDO::FETCH_ASSOC);
     
        return $data; 
   }
   
}

?>
